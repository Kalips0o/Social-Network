{"version":3,"file":"static/js/688.c85a4e9c.chunk.js","mappings":"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","sources":["components/Common/FormsControl/FormsControls.tsx","utils/validators/validators.ts","webpack://react-way-of-samurai/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://react-way-of-samurai/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.tsx","webpack://react-way-of-samurai/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.tsx","webpack://react-way-of-samurai/./src/components/Dialogs/AddMessageForm/AddMessageForm.module.css?2bba","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.tsx","webpack://react-way-of-samurai/./src/components/Common/FormsControl/FormsControls.module.css?1e90"],"sourcesContent":["import React from \"react\"\nimport styles from \"./FormsControls.module.css\"\nimport {FieldValidatorType} from \"../../../utils/validators/validators\"\nimport {Field, WrappedFieldProps} from \"redux-form\"\nimport {WrappedFieldMetaProps} from 'redux-form/lib/Field'\n\n\ntype FormControlPropsType = {\n    meta: WrappedFieldMetaProps\n}\n\n// @ts-ignore\nconst FormControl: React.FC<FormControlPropsType> = ({meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\n    //const {input, meta, child, ...restProps} = props;\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\n    //const {input, meta, child, ...restProps} = props;\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\n                                                         name: FormKeysType,\n                                                         validators: Array<FieldValidatorType>,\n                                                         component: React.FC<WrappedFieldProps>,\n                                                         props = {}, text = \"\") {\n    return <div>\n        <Field placeholder={placeholder} name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        /> {text}\n    </div>\n}\nexport type GetStringKeys<T> = Extract<keyof T, string>","export type FieldValidatorType = (value: string) => string | undefined\n\nexport const required: FieldValidatorType = (value) => {\n    if (value) return undefined;\n\n    return \"Field is required\";\n}\n\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__10gdM\",\"dialogsItems\":\"Dialogs_dialogsItems__wbPdj\",\"active\":\"Dialogs_active__nrEB3\",\"messages\":\"Dialogs_messages__YaLlA\",\"message\":\"Dialogs_message__x4zjZ\",\"textarea\":\"Dialogs_textarea__DfWiv\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__yDa6n\",\"active\":\"DialogItem_active__WuA0T\"};","import React from 'react';\nimport s from './DialogItem.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport Avatar from \"./../../../assets/img/UserPhoto/user.webp\";\n\ntype PropsType = {\n    id: number\n    name: string\n}\nexport const DialogItem:React.FC<PropsType> = (props) => {\n    const path = \"/dialogs/\" + props.id;\n\n    return (\n        <div className={s.dialog}>\n            <NavLink to={path} activeClassName={s.active}>\n                <img src={Avatar} alt={props.name + \"'s Avatar\"}/>\n                <span>{props.name}</span>\n            </NavLink>\n        </div>\n    );\n}\nexport default DialogItem","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__63jQs\",\"senderInfo\":\"Message_senderInfo__zNvH-\",\"incoming\":\"Message_incoming__ZvCmF\",\"outgoing\":\"Message_outgoing__1Zklx\",\"senderName\":\"Message_senderName__g6nFi\",\"messageContent\":\"Message_messageContent__UOst3\",\"messageTime\":\"Message_messageTime__GwJAN\"};","import React from 'react';\nimport s from './Message.module.css';\nimport avatar from './../../../assets/img/UserPhoto/user.webp'\n\ntype PropsType = {\n    message: string\n    name:string\n    messageTime:string\n}\n\n\nexport const Message:React.FC<PropsType> = (props) => {\n    const messageClassName = `${s.message} ${props.name === \"Me\" ? s.outgoing : s.incoming}`;\n    const avatarSrc = props.name === \"Me\" ? avatar : avatar;\n\n    return (\n        <div className={messageClassName}>\n            <div className={s.senderInfo}>\n                <img className={avatar} src={avatarSrc} alt={props.name + \" avatar\"}/>\n                <p className={s.senderName}>{props.name}</p>\n            </div>\n            <div className={s.messageContent}>\n                <p className={s.message}>{props.message}</p>\n                <span className={s.messageTime}>{props.messageTime}</span>\n            </div>\n        </div>\n    );\n};\n\n\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"submitButton\":\"AddMessageForm_submitButton__8OoD9\",\"messageButton\":\"AddMessageForm_messageButton__z7pPW\",\"textareaMessage\":\"AddMessageForm_textareaMessage__Oha91\",\"textarea\":\"AddMessageForm_textarea__aHBnD\"};","import React from 'react';\nimport {InjectedFormProps, isValid, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {createField, Textarea} from \"../../Common/FormsControl/FormsControls\";\nimport {NewMessageFormValuesType} from \"../Dialogs\";\nimport s from './AddMessageForm.module.css'\n\nconst maxLength50 = maxLengthCreator(50);\n\ntype NewMessageFormValuesKeysType = Extract<keyof NewMessageFormValuesType, string>\ntype PropsType = {}\n\nconst AddMessageForm: React.FC<InjectedFormProps<NewMessageFormValuesType, PropsType> & PropsType>\n    = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div className={s.textarea}>\n                    {createField<NewMessageFormValuesKeysType>(\"Enter your message\", 'newMessageBody',\n                        [required, maxLength50], Textarea)}\n                    <button>Send</button>\n                </div>\n\n        </form>\n    )\n}\n\nexport default reduxForm<NewMessageFormValuesType>({form: 'dialog-add-message-form'})(AddMessageForm);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Redirect} from \"react-router-dom\";\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\nimport {InitialStateType} from \"../../redux/dialogs-reducer\";\n\n\ntype PropsType = {\n    isAuth: boolean;\n    dialogsPage: InitialStateType\n    sendMessage: (messageText: string) => void\n}\n\nexport type NewMessageFormValuesType = {\n    newMessageBody: string\n}\nconst Dialogs = (props: PropsType) => {\n\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\n    let messagesElements = state.messages.map(m => <Message message={m.messageText} name={m.sender} key={m.id}\n                                                            messageTime={m.messageTime}/>);\n\n\n    let addNewMessage = (values: NewMessageFormValuesType) => {\n        props.sendMessage(values.newMessageBody);\n    }\n\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div>{messagesElements}</div>\n                <div ><AddMessageForm onSubmit={addNewMessage}/></div>\n\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Dialogs;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login'/>\n\n            return <Component {...this.props}/>\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n\n}","import React from 'react';\n\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {actions, sendNewMessageAC} from \"../../redux/dialogs-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\n\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        dialogsPage: state.dialogsPage\n\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {...actions}),\n    withAuthRedirect\n)(Dialogs)\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__Qqnnn\",\"error\":\"FormsControls_error__KUCU0\",\"formSummaryError\":\"FormsControls_formSummaryError__IyknP\",\"login\":\"FormsControls_login__Si2wy\",\"form\":\"FormsControls_form__QjY6U\",\"formTitle\":\"FormsControls_formTitle__DGzSR\",\"formDescription\":\"FormsControls_formDescription__Et9mJ\",\"formWrapper\":\"FormsControls_formWrapper__1o9Dk\",\"formLabelText\":\"FormsControls_formLabelText__xR1HN\",\"input\":\"FormsControls_input__ij5By\",\"formButton\":\"FormsControls_formButton__e-Pnu\",\"formError\":\"FormsControls_formError__ulgZE\"};"],"names":["FormControl","meta","touched","error","children","hasError","className","styles","Textarea","props","input","restProps","Input","createField","placeholder","name","validators","component","text","validate","maxLength","path","id","s","NavLink","to","activeClassName","src","Avatar","alt","messageClassName","avatarSrc","avatar","message","messageTime","required","value","maxLength50","length","reduxForm","form","onSubmit","handleSubmit","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","messageText","sender","isAuth","values","sendMessage","newMessageBody","Redirect","mapStateToPropsForRedirect","auth","compose","connect","actions","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}